buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'org.spongepowered.mixin'

group = 'com.diamantino'
version = '1.0.0'

java {
    archivesBaseName = 'EternalMagic'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    //mappings channel: 'official', version: '1.19.4'
    mappings channel: 'parchment', version: '2023.03.12-1.19.3'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'eternalmagic'
            
            mods {
                eternalmagic {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'eternalmagic'
            
            mods {
                eternalmagic {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'eternalmagic'

            mods {
                eternalmagic {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'eternalmagic', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                eternalmagic {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "eternalmagic.refmap.json"

    config "eternalmagic.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    // flatDir {
    //     dir 'libs'
    // }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.4-45.0.55'

    // compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
    // runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title": "eternalmagic",
                "Specification-Vendor": "DiamantinoOp",
                "Specification-Version": "1.0.0",
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor": "DiamantinoOp",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
